package gui.form.settingSql;

import gui.form.message.DialogThongBao;
import gui.form.message.DialogThongBao.MessageIcon;
import fpoly.tn.helper.CheckValidation;
import fpoly.tn.helper.Gobal;
import fpoly.tn.helper.SqlHelper;
import fpoly.tn.helper.MouseEffect;
import fpoly.tn.helper.ThongBao;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.util.prefs.Preferences;
import javax.swing.Timer;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

public class frm_SettingSql extends javax.swing.JDialog {

    public frm_SettingSql(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        initEvent();
        
        loadSettingSQL();
        setFormUI();
        
    }
    
    private void initEvent(){
        
        txtDataName.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
               disableButton();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
            }
        });
        txtPort.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
               disableButton();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
            }
        });
        txtLogin.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
               disableButton();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
            }
        });
        txtPass.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
               disableButton();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
            }
        });
    }
    
    private void disableButton(){
        btnLuu.setEnabled(false);
    }

    private void setFormUI() {

        MouseEffect.MouseMovingForm(khungTieuDe, this);
        MouseEffect.addMouseEffect(bntThoat, Color.red, new Color(102, 102, 102), Color.white, Color.BLACK);
    }

    private void kiemTraKetNoi() {

        btnLuu.setEnabled(false);
        if (checkFormValidation()) {

            Timer timeKiemTraKetNoi = new Timer(10, (ActionEvent e) -> {

                // lấy thông tin kết nối
                SqlHelper.DB_TCPPort = txtPort.getTextValue();
                SqlHelper.DB_DatabaseName = txtDataName.getTextValue();
                SqlHelper.DB_ID = txtLogin.getTextValue();
                SqlHelper.DB_PASS = new String(txtPass.getPassword());

                boolean ketNoiThanhCong = SqlHelper.ConnectionSQL();

                if (ketNoiThanhCong) {
                    ThongBao.taoThongBao(null, "Kết nối thành công", MessageIcon.CHECK);
                    btnLuu.setEnabled(true);
                } else {
                    ThongBao.taoThongBao(null, "Không thể kết nối Database", MessageIcon.WARNING);
                }

            });

            timeKiemTraKetNoi.setRepeats(false);
            timeKiemTraKetNoi.start();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        khungTieuDe = new javax.swing.JPanel();
        bntThoat = new javax.swing.JLabel();
        lblTuaDe = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtDataName = new com.shady.scontrols.STextField();
        txtPort = new com.shady.scontrols.STextField();
        txtLogin = new com.shady.scontrols.STextField();
        txtPass = new com.shady.scontrols.STextField();
        btnKiemTra = new com.shady.scontrols.SButton();
        btnLuu = new com.shady.scontrols.SButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cài đặt kết nối cơ sở dữ liệu");
        setBackground(new java.awt.Color(255, 255, 255));
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));

        khungTieuDe.setBackground(new java.awt.Color(102, 102, 102));

        bntThoat.setBackground(new java.awt.Color(102, 102, 102));
        bntThoat.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bntThoat.setForeground(new java.awt.Color(255, 255, 255));
        bntThoat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bntThoat.setText("x");
        bntThoat.setToolTipText("Thoát");
        bntThoat.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bntThoat.setName(""); // NOI18N
        bntThoat.setOpaque(true);
        bntThoat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bntThoatMouseClicked(evt);
            }
        });

        lblTuaDe.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTuaDe.setForeground(new java.awt.Color(255, 255, 255));
        lblTuaDe.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTuaDe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fpoly/tn/icon/icon_sqlSetting.png"))); // NOI18N
        lblTuaDe.setText("Cài đặt kết nối");
        lblTuaDe.setToolTipText("");

        javax.swing.GroupLayout khungTieuDeLayout = new javax.swing.GroupLayout(khungTieuDe);
        khungTieuDe.setLayout(khungTieuDeLayout);
        khungTieuDeLayout.setHorizontalGroup(
            khungTieuDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(khungTieuDeLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblTuaDe, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 258, Short.MAX_VALUE)
                .addComponent(bntThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        khungTieuDeLayout.setVerticalGroup(
            khungTieuDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(khungTieuDeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(khungTieuDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bntThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTuaDe, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(434, 434, 434))
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("TCP Port");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Database Name");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Login");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Password");

        txtDataName.sets_placeholder("Database name ...");
        txtDataName.sets_radius(10);

        txtPort.sets_placeholder("Port..");
        txtPort.sets_radius(10);

        txtLogin.sets_iconLeft(new javax.swing.ImageIcon(getClass().getResource("/fpoly/tn/icon/icon_user.png"))); // NOI18N
        txtLogin.sets_placeholder("id...");
        txtLogin.sets_radius(10);

        txtPass.sets_iconLeft(new javax.swing.ImageIcon(getClass().getResource("/fpoly/tn/icon/icon_password.png"))); // NOI18N
        txtPass.sets_placeholder("PassWord...");
        txtPass.sets_radius(10);
        txtPass.sets_textType(com.shady.scontrols.STextField.textTypeEnum.PASSWORD);

        btnKiemTra.setBackground(new java.awt.Color(51, 51, 255));
        btnKiemTra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fpoly/tn/icon/icon_connect.png"))); // NOI18N
        btnKiemTra.setText("Kiểm tra");
        btnKiemTra.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnKiemTra.sets_Cursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnKiemTra.sets_ForeColor(new java.awt.Color(255, 255, 255));
        btnKiemTra.sets_HoverForeColor(new java.awt.Color(255, 255, 255));
        btnKiemTra.sets_Radius(10);
        btnKiemTra.sets_borderColor(new java.awt.Color(153, 153, 153));
        btnKiemTra.sets_drawBorder(false);
        btnKiemTra.sets_hoverBackground(new java.awt.Color(51, 51, 255));
        btnKiemTra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKiemTraActionPerformed(evt);
            }
        });

        btnLuu.setBackground(new java.awt.Color(0, 185, 0));
        btnLuu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fpoly/tn/icon/icon_save.png"))); // NOI18N
        btnLuu.setText("Lưu");
        btnLuu.setEnabled(false);
        btnLuu.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnLuu.sets_Cursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLuu.sets_ForeColor(new java.awt.Color(255, 255, 255));
        btnLuu.sets_HoverForeColor(new java.awt.Color(255, 255, 255));
        btnLuu.sets_Radius(10);
        btnLuu.sets_borderColor(new java.awt.Color(153, 153, 153));
        btnLuu.sets_drawBorder(false);
        btnLuu.sets_hoverBackground(new java.awt.Color(0, 185, 0));
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(khungTieuDe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtLogin, javax.swing.GroupLayout.DEFAULT_SIZE, 446, Short.MAX_VALUE)
                                        .addComponent(txtDataName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtPort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(btnKiemTra, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 95, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(khungTieuDe, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(txtDataName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnKiemTra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bntThoatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bntThoatMouseClicked
        this.dispose();
    }//GEN-LAST:event_bntThoatMouseClicked

    private void btnKiemTraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKiemTraActionPerformed
        kiemTraKetNoi();
    }//GEN-LAST:event_btnKiemTraActionPerformed

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        luuThongTin();
    }//GEN-LAST:event_btnLuuActionPerformed

    // hàm xử lý
    private void luuThongTin() {

        Preferences pref = Preferences.userNodeForPackage(frm_SettingSql.class);
       
        
        String TCPPort = txtPort.getTextValue();
        String DatabaseName = txtDataName.getTextValue();
        String ID = txtLogin.getTextValue();
        String PASS = txtPass.getTextValue();

        pref.put(Gobal.PrefKey.FormSettingSql.TCPPort, TCPPort);
        pref.put(Gobal.PrefKey.FormSettingSql.DatabaseName, DatabaseName);
        pref.put(Gobal.PrefKey.FormSettingSql.ID, ID);
        pref.put(Gobal.PrefKey.FormSettingSql.PASS, PASS);
        
        SqlHelper.DB_DatabaseName = DatabaseName;
        SqlHelper.DB_ID = ID;
        SqlHelper.DB_PASS = PASS;
        SqlHelper.DB_TCPPort = TCPPort;
        
        
        ThongBao.taoThongBao(null, "Lưu thành công", DialogThongBao.MessageIcon.CHECK);

    }

    private void loadSettingSQL() {

        Preferences pref = Preferences.userNodeForPackage(frm_SettingSql.class);

        String TCPPort = pref.get(Gobal.PrefKey.FormSettingSql.TCPPort, "");
        String DatabaseName = pref.get(Gobal.PrefKey.FormSettingSql.DatabaseName, "");
        String ID = pref.get(Gobal.PrefKey.FormSettingSql.ID, "");
        String PASS = pref.get(Gobal.PrefKey.FormSettingSql.PASS, "");

        txtPort.setText(TCPPort.equals("") ? SqlHelper.DB_TCPPort : TCPPort);
        txtDataName.setText(DatabaseName.equals("") ? SqlHelper.DB_DatabaseName : DatabaseName);
        txtLogin.setText(ID.equals("") ? SqlHelper.DB_ID : ID);
        txtPass.setText(PASS.equals("") ? SqlHelper.DB_PASS : PASS);

    }

    private boolean checkFormValidation() {
        boolean hopLe = true;
        String thongBao = "";

        if (CheckValidation.checkStringTrong(txtDataName.getTextValue())) {
            hopLe = false;
            thongBao = "Tên database trống!";
        } else if (CheckValidation.checkStringTrong(txtPort.getTextValue())) {
            hopLe = false;
            thongBao = "TCP Port trống!";
        } else if (CheckValidation.checkStringTrong(txtLogin.getTextValue())) {
            hopLe = false;
            thongBao = "Tên login trống!";
        } else if (CheckValidation.checkStringTrong(txtPass.getTextValue())) {
            hopLe = false;
            thongBao = "Mật khẩu trống!";
        }

        if (!hopLe) {
            System.out.println(thongBao);
        }

        return hopLe;

    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_SettingSql.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            frm_SettingSql dialog = new frm_SettingSql(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bntThoat;
    private com.shady.scontrols.SButton btnKiemTra;
    private com.shady.scontrols.SButton btnLuu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel khungTieuDe;
    private javax.swing.JLabel lblTuaDe;
    private com.shady.scontrols.STextField txtDataName;
    private com.shady.scontrols.STextField txtLogin;
    private com.shady.scontrols.STextField txtPass;
    private com.shady.scontrols.STextField txtPort;
    // End of variables declaration//GEN-END:variables
}
